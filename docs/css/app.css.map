{"version":3,"file":"css/app.css","mappings":"AAsBE,yBAEE,kBAAmB,CAFV,YACI,CAEb,sBAAuB,CACzB,qBAUE,yBAFA,WAAY,CAFZ,eAAgB,CAHhB,WAAY,CAIZ,gBAAiB,CAFjB,QAAS,CADT,aAAe,CAKf,oCAAsC,CARjC,UAS+B,CACtC,2BACa,wBACyB,CACtC,4BACc,qBACwB,CACtC,oBASE,yBANA,WAAY,CACZ,WAAY,CAGZ,gBAAiB,CADjB,QAAS,CADT,aAAe,CAGf,iBAAkB,CAPd,UAQgC,CACtC,oBACM,WACQ,CACd,8FAIiC,uBACP,CACxB,QAAS,CACX,iCAGqB,yBACO,CCrD5B,qDAGE,kBAAmB,CAHV,YACI,CACb,kBAAmB,CAEnB,YAAc,CAChB,wDAGE,SAAQ,CAFI,iBAEF,CACZ,kDAME,kBAAmB,CACnB,kBAAmB,CANb,oBACe,CACrB,cAAe,CACf,WAAY,CAKZ,aADA,WAAY,CAHZ,UAIc,CAChB,uDAKE,eAAgB,CADhB,kBAAmB,CAEnB,uCAA8C,CALnC,WACC,CAKZ,mBAJA,UAIqB,CACvB,qEAGE,wBAAyB,CACzB,wBAH2B,+BAGH,CAC1B,+CACK,YACW,CClChB,wBAIE,oBAAqB,CAJb,iBACU,CAElB,WAAY,CAEZ,yCAHA,UAG0C,CAC5C,kCAGE,oDAFkB,iBAEoB,CACxC,oBAIE,sBAAwB,CAGxB,iBAAkB,CAClB,cAAe,CAFf,WAAY,CAGZ,YARI,YACS,CAGb,UAIY,CACd,8BACgB,8CACmB,CACnC,+BACiB,GACZ,sBACuB,CAC1B,IACI,iCACmC,CACvC,IACI,kCACqC,CACzC,IACI,sBACsB,CAC1B,GACK,sBACqB,CAC1B,CACF,oCACsB,GACjB,kBACkB,CACrB,IACI,mBACmB,CACvB,GACK,kBACgB,CACrB,CACF,yBAIE,kBAAmB,CADnB,YAAa,CAEb,sBAAuB,CACvB,iBALS,iBAKQ,CCoBX,KAEN,wBAAyB,CAFb,UACA,CAEZ,wHAC2C,CAC7C,MACe,cACE,CACjB,iCAWE,UAAW,CACb,sEARE,WAAY,CAEZ,MAAO,CAEP,QAAS,CACT,eAAgB,CAFhB,SAAU,CANP,cACY,CAGf,KAAM,CAFN,UAmBU,CAVZ,qCAUE,SAAU,CACZ,qCAOE,mCAAwC,CAJxC,eAAgB,CAGhB,WAAY,CAFZ,gBAAiB,CAKjB,YADA,iBAAkB,CAPX,iBACW,CAGlB,UAIY,CACd,oCACQ,oCACmC,CAKzC,mBAAqB,CAHrB,QAAS,CAET,WAAY,CAEZ,gBALA,YAAa,CAEb,iBAGgB,CAClB,wCAGE,gBAAiB,CACjB,gBAHY,8BAGI,CAClB,4CACkB,YACD,CACf,eAAgB,CAClB,kCAGE,YAFI,UAEQ,CACd,mCAOE,wBAAoC,CADpC,WAAY,CADZ,mBAAqB,CAFrB,cAAe,CACf,WAAY,CAHP,aACU,CAMf,oCAAsC,CACxC,yCACa,wBACyB,CACtC,0CACc,wBACqB","sources":["webpack://screen-recorder/./src/Number.svelte","webpack://screen-recorder/./src/Switch.svelte","webpack://screen-recorder/./src/RecordSwitch.svelte","webpack://screen-recorder/./src/App.svelte"],"sourcesContent":["<script>\n  export let name = 'default';\n  export let value = parseInt(localStorage.getItem('number-' + name)) || 0;\n  $: {\n    value = Math.trunc(value);\n    if (value < min) value = min;\n    localStorage.setItem('number-' + name, value);\n  }\n  export let min = 0;\n  let id = Math.floor(Math.random() * 1000) + '-number';\n</script>\n\n<div class=\"container\">\n  <label for={id}>\n    <slot />\n  </label>\n  <button class=\"dec\" on:click={() => value--}>-</button>\n  <input type=\"number\" {id} bind:value {min} />\n  <button class=\"inc\" on:click={() => value++}>+</button>\n</div>\n\n<style>\n  .container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  button {\n    width: 2rem;\n    height: 100%;\n    padding: 0.5rem;\n    margin: 0;\n    border-radius: 0;\n    line-height: 1rem;\n    border: none;\n    transition: background-color 0.3s ease;\n    background-color: rgb(214, 214, 214);\n  }\n  button:hover {\n    background-color: rgb(155, 155, 155);\n  }\n  button:active {\n    background-color: rgb(102, 102, 102);\n  }\n  input {\n    width: 3rem;\n    border: none;\n    height: 1rem;\n    padding: 0.5rem;\n    margin: 0;\n    line-height: 1rem;\n    text-align: center;\n    background-color: rgb(214, 214, 214);\n  }\n  label {\n    margin: 1rem;\n  }\n\n  /* Chrome, Safari, Edge, Opera */\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n</style>\n","<script>\n  export let value = false;\n  let id = Math.trunc(Math.random() * 1000) + '-switch';\n</script>\n\n<div class=\"container\">\n  <label class=\"switch\"\n    ><input type=\"checkbox\" {id} bind:checked={value} />\n    <div class=\"but\" />\n  </label>\n  <label for={id} class=\"txt\"><slot /></label>\n</div>\n\n<style>\n  .container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin: 0.3rem;\n  }\n  .switch input {\n    position: absolute;\n    opacity: 0;\n  }\n  .switch {\n    display: inline-block;\n    font-size: 20px; /* 1 */\n    height: 1rem;\n    width: 2rem;\n    background: #bdb9a6;\n    border-radius: 1rem;\n    padding: 2px;\n    margin: 0.2rem;\n  }\n  .switch .but {\n    height: 1rem;\n    width: 1rem;\n    border-radius: 1rem;\n    background: #fff;\n    box-shadow: 0 0.1rem 0.3rem rgba(0, 0, 0, 0.3);\n    transition: all 300ms;\n  }\n  .switch input:checked + .but {\n    transform: translate3d(100%, 0, 0);\n    background-color: #1f49a3;\n    box-shadow: 0 0 5px grey;\n  }\n  .txt {\n    margin: 0.2rem;\n  }\n</style>\n","<script>\n  export let recording = false;\n  export let toogle = () => {\n    recording = !recording;\n  };\n</script>\n\n<div class=\"container\">\n  <div class=\"ring\" on:click={toogle} class:recording>\n    <div class=\"innerdiv\" class:recording />\n  </div>\n</div>\n\n<style>\n  .innerdiv {\n    border-radius: 50%;\n    width: 3rem;\n    height: 3rem;\n    background-color: red;\n    transition: border-radius 0.3s ease-in-out;\n  }\n  .innerdiv.recording {\n    border-radius: 10%;\n    animation: scaleWaves 1s ease infinite;\n  }\n  .ring {\n    padding: 1rem;\n    border: 1rem;\n    border: solid 0.5rem red;\n    width: 3rem;\n    height: 3rem;\n    border-radius: 50%;\n    cursor: pointer;\n    margin: 2rem;\n  }\n  .ring.recording {\n    animation: waves 1s ease infinite;\n  }\n  @keyframes waves {\n    0% {\n      border: solid 0.5rem red;\n    }\n    50% {\n      border: solid 2rem rgba(255, 0, 0, 0);\n    }\n    51% {\n      border: solid 0.1rem rgba(255, 0, 0, 0);\n    }\n    75% {\n      border: solid 0.5rem red;\n    }\n    100% {\n      border: solid 0.5rem red;\n    }\n  }\n  @keyframes scaleWaves {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(0.9);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n  .container {\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 13rem;\n  }\n</style>\n","<script lang=\"ts\">\n  import Number from './Number.svelte';\n  import Recorder from './Recorder';\n  import Switch from './Switch.svelte';\n  import RecordSwitch from './RecordSwitch.svelte';\n  import { fade } from 'svelte/transition';\n  import { countdown, wait } from './utils';\n\n  const oldState = JSON.parse(\n    localStorage.getItem('screen-recorder-app-state') ||\n      JSON.stringify({\n        systemAudio: true,\n        micAudio: false,\n        saveImediately: true,\n        timeOut: 5,\n      })\n  );\n  let vid: HTMLVideoElement;\n  let r: Recorder;\n  let systemAudio: boolean = oldState.systemAudio;\n  let micAudio: boolean = oldState.micAudio;\n  let saveImediately: boolean = oldState.saveImediately;\n  let timeOut: number = oldState.timeOut;\n  let recording = false;\n  let counter = 0;\n  let counting = false;\n  let stage = 0;\n  $: {\n    localStorage.setItem(\n      'screen-recorder-app-state',\n      JSON.stringify({\n        systemAudio,\n        micAudio,\n        saveImediately,\n        timeOut,\n      })\n    );\n  }\n  async function reset() {\n    recording = false;\n    stage = 0;\n  }\n  async function select() {\n    r = new Recorder({ microphone: micAudio, systemAudio, timeslice: 5000 });\n    r.addEventListener('stopping', reset);\n    r.addEventListener('error', reset);\n    (window as any).r = r;\n    vid.srcObject = r.rStream;\n    vid.play();\n    await r.requestStreams();\n    stage++;\n  }\n  async function toogle() {\n    if (recording) {\n      r.stop();\n    } else {\n      counting = true;\n      for await (let i of countdown(timeOut)) counter = i;\n      counting = false;\n      r.saveStream();\n      recording = true;\n      stage++;\n    }\n  }\n</script>\n\n<div class=\"vid\">\n  <!-- svelte-ignore a11y-media-has-caption -->\n  <video bind:this={vid} muted />\n</div>\n<div class=\"overlay\">\n  <div class=\"pannel\">\n    <div class=\"options\" class:hidden={stage !== 0}>\n      <Switch bind:value={systemAudio}>Record system audio</Switch>\n      <Switch bind:value={micAudio}>Record from microphone</Switch>\n      <Switch bind:value={saveImediately}>Save video while recroding (recomended)</Switch>\n      <button on:click={() => select()}>Select Screen</button>\n    </div>\n    <div class=\"countdown\" class:hidden={stage !== 1}>\n      <Number bind:value={timeOut}>Countdown</Number>\n    </div>\n    <div class=\"record\" class:hidden={stage !== 2 && stage !== 1}>\n      <RecordSwitch bind:recording {toogle} />\n    </div>\n  </div>\n  {#if counting}\n    <div transition:fade class=\"counter\">{counter}</div>\n  {/if}\n</div>\n\n<style>\n  :global(body) {\n    color: white;\n    background-color: #131313;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n  }\n  :global(:root) {\n    font-size: 14px;\n  }\n  .vid {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    padding: 0;\n    margin: 0;\n    overflow: hidden;\n    /* background-color: green; */\n    z-index: -1;\n  }\n  .overlay {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    padding: 0;\n    margin: 0;\n    overflow: hidden;\n    z-index: 0;\n  }\n  .counter {\n    text-align: center;\n    font-size: 10rem;\n    line-height: 100%;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(48, 48, 48, 0.76);\n    position: absolute;\n    margin: auto;\n  }\n  .pannel {\n    background-color: rgba(37, 37, 37, 0.959);\n    padding: 2rem;\n    bottom: 0;\n    position: absolute;\n    margin: 2rem;\n    border-radius: 0.5rem;\n    overflow: hidden;\n  }\n  .pannel > div {\n    transition: max-height 0.7s ease;\n    max-height: 13rem;\n    overflow: hidden;\n  }\n  .pannel > .hidden {\n    max-height: 0px;\n    overflow: hidden;\n  }\n  video {\n    width: 100%;\n    height: 100%;\n  }\n  button {\n    padding: 0.7rem;\n    font-size: 1rem;\n    margin: 1rem;\n    border-radius: 0.5rem;\n    border: none;\n    background-color: rgb(214, 214, 214);\n    transition: background-color 0.3s ease;\n  }\n  button:hover {\n    background-color: rgb(141, 141, 141);\n  }\n  button:active {\n    background-color: rgb(75, 75, 75);\n  }\n</style>\n"],"names":[],"sourceRoot":""}